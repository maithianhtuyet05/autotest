package Day4;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.annotations.*;

import java.util.List;

public class SauceDemoTest {
    WebDriver driver;

    @BeforeMethod
    public void setup() {
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://www.saucedemo.com/");
    }

    @Test
    public void testFullCheckoutFlow() throws InterruptedException {
        // Step 1: Login
        driver.findElement(By.id("user-name")).sendKeys("standard_user");
        driver.findElement(By.id("password")).sendKeys("secret_sauce");
        driver.findElement(By.id("login-button")).click();

        // Step 2: Sort Price (low to high) and checkout 3 sản phẩm
        Select dropdown = new Select(driver.findElement(By.className("product_sort_container")));
        dropdown.selectByVisibleText("Price (low to high)");

        List<WebElement> addButtons = driver.findElements(By.xpath("//button[text()='Add to cart']"));
        addButtons.get(0).click();
        addButtons.get(1).click();
        addButtons.get(2).click();

        // Step 3: Add to cart 2 sản phẩm bất kỳ (giữ lại 2 sản phẩm)
        driver.findElements(By.xpath("//button[text()='Remove']")).get(0).click(); // Remove 1 item

        WebElement cartBadge = driver.findElement(By.className("shopping_cart_badge"));
        Assert.assertEquals(cartBadge.getText(), "2");

        // Step 4: Click vào giỏ hàng
        driver.findElement(By.className("shopping_cart_link")).click();

        List<WebElement> cartItems = driver.findElements(By.className("cart_item"));
        Assert.assertEquals(cartItems.size(), 2);

        List<WebElement> removeButtons = driver.findElements(By.xpath("//button[text()='Remove']"));
        Assert.assertEquals(removeButtons.size(), 2);

        // Step 5: Click continue và nhập thông tin
        driver.findElement(By.id("checkout")).click();
        driver.findElement(By.id("first-name")).sendKeys("John");
        driver.findElement(By.id("last-name")).sendKeys("Doe");
        driver.findElement(By.id("postal-code")).sendKeys("70000");
        driver.findElement(By.id("continue")).click();

        // Step 6: Verify overview page
        List<WebElement> overviewItems = driver.findElements(By.className("cart_item"));
        Assert.assertEquals(overviewItems.size(), 2);

        WebElement shippingInfo = driver.findElement(By.className("summary_value_label"));
        Assert.assertTrue(shippingInfo.getText().contains("Free Pony Express Delivery!"));

        WebElement itemTotal = driver.findElement(By.className("summary_subtotal_label"));
        WebElement tax = driver.findElement(By.className("summary_tax_label"));
        WebElement total = driver.findElement(By.className("summary_total_label"));

        Assert.assertTrue(itemTotal.getText().contains("Item total:"));
        Assert.assertTrue(tax.getText().contains("Tax:"));
        Assert.assertTrue(total.getText().contains("Total:"));

        Assert.assertTrue(driver.findElement(By.id("finish")).isDisplayed());

        // Step 7: Click Finish
        driver.findElement(By.id("finish")).click();

        // Verify Complete Page
        WebElement title = driver.findElement(By.className("complete-header"));
        WebElement msg = driver.findElement(By.className("complete-text"));
        WebElement backHome = driver.findElement(By.id("back-to-products"));

        Assert.assertEquals(title.getText(), "Checkout: Complete!");
        Assert.assertTrue(msg.getText().contains("Thank you for your order!"));
        Assert.assertTrue(msg.getText().contains("dispatched"));
        Assert.assertTrue(backHome.isDisplayed());
    }

    @AfterMethod
    public void tearDown() {
        if (driver != null) driver.quit();
    }
}
